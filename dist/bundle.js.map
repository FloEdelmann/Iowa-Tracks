{"version":3,"file":"bundle.js","sources":["../src/index.js"],"sourcesContent":["const canvas = document.body.querySelector('canvas');\nconst context = canvas.getContext('2d');\nconst tree = new rbush();\n\nfunction boundingBox(feature) {\n    let bounds= {};\n    let coords = feature.geometry.coordinates[0];\n    for (let i = 0; i < coords.length; i++) {\n        let longitude = coords[i][0];\n        let latitude = coords[i][1];\n        bounds.xMin = bounds.xMin < longitude ? bounds.xMin : longitude;\n        bounds.xMax = bounds.xMax > longitude ? bounds.xMax : longitude;\n        bounds.yMin = bounds.yMin < latitude ? bounds.yMin : latitude;\n        bounds.yMax = bounds.yMax > latitude ? bounds.yMax : latitude;\n    }\n    bounds.xMin = project(bounds.xMin,bounds.yMin).x;\n    bounds.yMin = project(bounds.xMin,bounds.yMin).y;\n    bounds.xMax = project(bounds.xMax,bounds.yMax).x;\n    bounds.yMax = project(bounds.xMax,bounds.yMax).y;\n    return bounds;\n}\n\nfunction drawFeature(offsetX , offsetY, feature) {\n    context.fillStyle = '#74d4de';\n    const bounds = boundingBox(feature);\n    const xScale = 50 / Math.abs(bounds.xMax - bounds.xMin);\n    const yScale = 50 / Math.abs(bounds.yMax - bounds.yMin);\n    const scale = (xScale < yScale ? xScale : yScale) - 0.1;\n    const coords = feature.geometry.coordinates[0];\n    for (let i = 0; i < coords.length; i++) {\n        const longitude = coords[i][0];\n        const latitude = coords[i][1];\n        let point = project(longitude, latitude);\n        point = {\n            x: (point.x - bounds.xMin) * scale + offsetX,\n            y: (bounds.yMax - point.y) * scale + offsetY\n        };\n        if (i === 0) {\n            context.beginPath();\n            context.moveTo(point.x, point.y);\n        } else {\n            context.lineTo(point.x, point.y);\n        }\n    }\n    context.fill();\n}\n\nfunction project(longitude, latitude) {\n    /* project into mercator */\n    const radius = 6378137;\n    const max = 85.0511287798;\n    const radians = Math.PI / 180;\n    let point = {x:0,y:0};\n    point.x = radius * longitude * radians;\n    point.y = Math.max(Math.min(max, latitude), -max) * radians;\n    point.y = radius * Math.log(Math.tan((Math.PI / 4) + (point.y / 2)));\n    return point;\n}\n\nfunction getWidth() {\n    return Math.min(\n        document.body.scrollWidth,\n        document.documentElement.scrollWidth,\n        document.body.offsetWidth,\n        document.documentElement.offsetWidth,\n        document.documentElement.clientWidth\n    );\n}\n\nfetch('./pools.json').then(res=> {\n    return res.json();\n}).then((topo)=>{\n    const data = topojson.feature(topo, topo.objects.pools);\n    draw(data,tree);\n    let resizeTimer;\n    window.addEventListener('resize', function() {\n        clearTimeout(resizeTimer);\n        resizeTimer = setTimeout(draw(data,tree), 300);\n    });\n})\n\nfunction draw(data, tree){\n    tree.clear();\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    const featureLength = data.features.length;\n    console.log(featureLength)\n    const width = getWidth();\n    const rowWidth = Math.floor( width / 50);\n    canvas.height = Math.ceil((((featureLength / rowWidth) * 50)- 1)/ 50) * 50;\n    canvas.width = Math.ceil((width-1)/50) * 50 - 50;\n    let offsetX = 0;\n    let offsetY = 0;\n    let boxArr = [];\n    \n    for (let i = 0; i < featureLength; i++) {\n        const feature =  data.features[i]\n        drawFeature(offsetX, offsetY,  feature);\n        let box = {\n            featureId: feature.properties['@id'],\n            minX :offsetX,\n            minY :offsetY,\n            maxX :offsetX + 50,\n            maxY :offsetY + 50\n        }\n        offsetX += 50;\n        if (offsetX % canvas.width == 0) {\n            offsetX = 0;\n            offsetY += 50;\n        }\n        boxArr.push(box)\n    }\n    tree.load(boxArr);\n    canvas.removeEventListener('click',openFeature);\n    canvas.addEventListener('click', openFeature);\n}\n\nfunction openFeature(e) {\n    const x = e.pageX;\n    const y = e.pageY;\n    const cells = tree.search({\n        minX: x,\n        minY: y,\n        maxX: x + 1,\n        maxY: y + 1\n    });\n    window.open('https://openstreetmap.org/' + cells[0].featureId, '_blank');\n}"],"names":["const","canvas","document","body","querySelector","context","getContext","tree","rbush","drawFeature","offsetX","offsetY","feature","fillStyle","bounds","coords","geometry","coordinates","i","length","longitude","latitude","xMin","xMax","yMin","yMax","project","x","y","boundingBox","xScale","Math","abs","yScale","scale","point","beginPath","moveTo","lineTo","fill","max","radians","PI","min","log","tan","draw","data","clear","clearRect","width","height","featureLength","features","console","scrollWidth","documentElement","offsetWidth","clientWidth","rowWidth","floor","ceil","boxArr","box","featureId","properties","minX","minY","maxX","maxY","push","load","removeEventListener","openFeature","addEventListener","e","pageX","pageY","cells","search","window","open","fetch","then","res","json","topo","resizeTimer","topojson","objects","pools","clearTimeout","setTimeout"],"mappings":"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"}